[{"/Users/k18041kk/Downloads/react_tutorial/react-quiz/src/App.tsx":"1","/Users/k18041kk/Downloads/react_tutorial/react-quiz/src/index.tsx":"2","/Users/k18041kk/Downloads/react_tutorial/react-quiz/src/components/QuestionCard.tsx":"3","/Users/k18041kk/Downloads/react_tutorial/react-quiz/src/API.ts":"4","/Users/k18041kk/Downloads/react_tutorial/react-quiz/src/utils.ts":"5"},{"size":2098,"mtime":1609563445135,"results":"6","hashOfConfig":"7"},{"size":198,"mtime":1609553753098,"results":"8","hashOfConfig":"7"},{"size":849,"mtime":1609562864895,"results":"9","hashOfConfig":"7"},{"size":786,"mtime":1609564139496,"results":"10","hashOfConfig":"7"},{"size":104,"mtime":1609563727784,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"10hy21w",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/k18041kk/Downloads/react_tutorial/react-quiz/src/App.tsx",["23","24"],"import React, { useState } from 'react';\nimport { fetchQuizQuestions, Difficulty, QuestionState } from './API';\n// Components\nimport QuestionCard from './components/QuestionCard';\n\ntype AnswerObject = {\n  question: string;\n  answer: string;\n  correct: boolean;\n  correctAnswer: string;\n};\n\nconst TOTAL_QUESTIONS = 10;\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState<QuestionState[]>([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  console.log(fetchQuizQuestions(2, Difficulty.EASY));\n\n  const startTrivia = async () => {\n    setLoading(true);\n    setGameOver(false);\n\n    const newQuestions = await fetchQuizQuestions(\n      TOTAL_QUESTIONS,\n      Difficulty.EASY\n    );\n    setQuestions(newQuestions);\n    setScore(0);\n    setNumber(0);\n    setLoading(false);\n  };\n\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {};\n\n  const nextQuestion = () => {\n    console.log('next.js');\n  };\n\n  return (\n    <div className='App'>\n      <h1>REACT QUIZ</h1>\n      {gameOver || userAnswers.length === TOTAL_QUESTIONS ? (\n        <button className='start' onClick={startTrivia}>\n          Start\n        </button>\n      ) : null}\n      {!gameOver ? <p className='score'>Score:</p> : null}\n      {loading && <p>Loading Question ...</p>}\n      {!loading && !gameOver && (\n        <QuestionCard\n          questionNr={number + 1}\n          totalQuestions={TOTAL_QUESTIONS}\n          question={questions[number].question}\n          answers={questions[number].answers}\n          userAnswer={userAnswers ? userAnswers[number] : undefined}\n          callback={checkAnswer}\n        />\n      )}\n      {!gameOver &&\n      !loading &&\n      userAnswers.length === number + 1 &&\n      number !== TOTAL_QUESTIONS - 1 ? (\n        <button className='next' onClick={nextQuestion}>\n          Next Question\n        </button>\n      ) : null}\n    </div>\n  );\n};\n\nexport default App;\n","/Users/k18041kk/Downloads/react_tutorial/react-quiz/src/index.tsx",[],"/Users/k18041kk/Downloads/react_tutorial/react-quiz/src/components/QuestionCard.tsx",[],"/Users/k18041kk/Downloads/react_tutorial/react-quiz/src/API.ts",[],"/Users/k18041kk/Downloads/react_tutorial/react-quiz/src/utils.ts",[],{"ruleId":"25","severity":1,"message":"26","line":19,"column":23,"nodeType":"27","messageId":"28","endLine":19,"endColumn":37},{"ruleId":"25","severity":1,"message":"29","line":20,"column":10,"nodeType":"27","messageId":"28","endLine":20,"endColumn":15},"@typescript-eslint/no-unused-vars","'setUserAnswers' is assigned a value but never used.","Identifier","unusedVar","'score' is assigned a value but never used."]